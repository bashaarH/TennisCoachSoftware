#BlueJ class context
comment0.target=BinaryTree
comment1.params=
comment1.target=BinaryTree()
comment1.text=\r\n\ Default\ constructor\ for\ the\ binary\ tree\ class\r\n
comment10.params=first\ second\ index
comment10.target=boolean\ test(java.lang.String,\ java.lang.String,\ int)
comment10.text=\r\n\ Utility\ method\ to\ determine\ if\ the\ first\ string\ comes\ before\ the\ second\r\n\ string\ when\ put\ in\ alphabetical\ order\r\n
comment2.params=player
comment2.target=BinaryTree(Player)
comment2.text=\r\n\ Constructor\ for\ BinaryTree\ class\ with\ a\ Player\ object\ as\ the\ parameter\r\n
comment3.params=player
comment3.target=void\ addPlayer(Player)
comment3.text=\r\n\ Adds\ the\ given\ player\ to\ this\ BinaryTree\ \r\n
comment4.params=start\ player
comment4.target=void\ add(BinaryTree.Node,\ Player)
comment4.text=\r\n\ Recursively\ find\ an\ appropriate\ location\ for\ the\ new\ player\ and\ add\ it\ to\r\n\ this\ BinaryTree\r\n
comment5.params=name
comment5.target=Player\ search(java.lang.String)
comment5.text=\r\n\ Searches\ this\ binary\ tree\ for\ the\ player\ with\ the\ given\ name\r\n
comment6.params=name\ start
comment6.target=Player\ search(java.lang.String,\ BinaryTree.Node)
comment6.text=\r\n\ Searches\ the\ binary\ tree\ for\ the\ player\ with\ the\ given\ name\ starting\ from\ the\r\n\ given\ Node\r\n
comment7.params=name\ start
comment7.target=BinaryTree.Node\ searchNode(java.lang.String,\ BinaryTree.Node)
comment7.text=\r\n\ Returns\ the\ node\ that\ contains\ the\ player\ with\ the\ specified\ name\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getPlayerList()
comment8.text=\r\n\ Returns\ an\ ArrayList\ of\ all\ the\ players\ in\ this\ binary\ tree\ in\ alphabetical\r\n\ order\r\n
comment9.params=start
comment9.target=void\ inorder(BinaryTree.Node)
comment9.text=\r\n\ A\ utility\ method\ for\ an\ in-order\ transversal\ of\ this\ binary\ tree\r\n
numComments=11
